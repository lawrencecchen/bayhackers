/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/comment_with_author": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comment_with_author.id"];
          slug?: parameters["rowFilter.comment_with_author.slug"];
          createdAt?: parameters["rowFilter.comment_with_author.createdAt"];
          updatedAt?: parameters["rowFilter.comment_with_author.updatedAt"];
          title?: parameters["rowFilter.comment_with_author.title"];
          content?: parameters["rowFilter.comment_with_author.content"];
          isPublished?: parameters["rowFilter.comment_with_author.isPublished"];
          authorId?: parameters["rowFilter.comment_with_author.authorId"];
          parentId?: parameters["rowFilter.comment_with_author.parentId"];
          live?: parameters["rowFilter.comment_with_author.live"];
          siteId?: parameters["rowFilter.comment_with_author.siteId"];
          isPinned?: parameters["rowFilter.comment_with_author.isPinned"];
          isDeleted?: parameters["rowFilter.comment_with_author.isDeleted"];
          isApproved?: parameters["rowFilter.comment_with_author.isApproved"];
          html?: parameters["rowFilter.comment_with_author.html"];
          isSpam?: parameters["rowFilter.comment_with_author.isSpam"];
          author?: parameters["rowFilter.comment_with_author.author"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comment_with_author"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/comments_linear_view": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments_linear_view.id"];
          slug?: parameters["rowFilter.comments_linear_view.slug"];
          createdAt?: parameters["rowFilter.comments_linear_view.createdAt"];
          updatedAt?: parameters["rowFilter.comments_linear_view.updatedAt"];
          title?: parameters["rowFilter.comments_linear_view.title"];
          content?: parameters["rowFilter.comments_linear_view.content"];
          isPublished?: parameters["rowFilter.comments_linear_view.isPublished"];
          authorId?: parameters["rowFilter.comments_linear_view.authorId"];
          parentId?: parameters["rowFilter.comments_linear_view.parentId"];
          live?: parameters["rowFilter.comments_linear_view.live"];
          siteId?: parameters["rowFilter.comments_linear_view.siteId"];
          isPinned?: parameters["rowFilter.comments_linear_view.isPinned"];
          isDeleted?: parameters["rowFilter.comments_linear_view.isDeleted"];
          isApproved?: parameters["rowFilter.comments_linear_view.isApproved"];
          html?: parameters["rowFilter.comments_linear_view.html"];
          isSpam?: parameters["rowFilter.comments_linear_view.isSpam"];
          author?: parameters["rowFilter.comments_linear_view.author"];
          parent?: parameters["rowFilter.comments_linear_view.parent"];
          responses?: parameters["rowFilter.comments_linear_view.responses"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comments_linear_view"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/comments_thread": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments_thread.id"];
          slug?: parameters["rowFilter.comments_thread.slug"];
          createdAt?: parameters["rowFilter.comments_thread.createdAt"];
          updatedAt?: parameters["rowFilter.comments_thread.updatedAt"];
          title?: parameters["rowFilter.comments_thread.title"];
          content?: parameters["rowFilter.comments_thread.content"];
          isPublished?: parameters["rowFilter.comments_thread.isPublished"];
          authorId?: parameters["rowFilter.comments_thread.authorId"];
          parentId?: parameters["rowFilter.comments_thread.parentId"];
          live?: parameters["rowFilter.comments_thread.live"];
          siteId?: parameters["rowFilter.comments_thread.siteId"];
          isPinned?: parameters["rowFilter.comments_thread.isPinned"];
          isDeleted?: parameters["rowFilter.comments_thread.isDeleted"];
          isApproved?: parameters["rowFilter.comments_thread.isApproved"];
          html?: parameters["rowFilter.comments_thread.html"];
          isSpam?: parameters["rowFilter.comments_thread.isSpam"];
          author?: parameters["rowFilter.comments_thread.author"];
          votes?: parameters["rowFilter.comments_thread.votes"];
          upvotes?: parameters["rowFilter.comments_thread.upvotes"];
          downvotes?: parameters["rowFilter.comments_thread.downvotes"];
          depth?: parameters["rowFilter.comments_thread.depth"];
          path?: parameters["rowFilter.comments_thread.path"];
          pathVotesRecent?: parameters["rowFilter.comments_thread.pathVotesRecent"];
          pathLeastRecent?: parameters["rowFilter.comments_thread.pathLeastRecent"];
          pathMostRecent?: parameters["rowFilter.comments_thread.pathMostRecent"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comments_thread"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/comments_thread_with_user_vote": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments_thread_with_user_vote.id"];
          slug?: parameters["rowFilter.comments_thread_with_user_vote.slug"];
          createdAt?: parameters["rowFilter.comments_thread_with_user_vote.createdAt"];
          updatedAt?: parameters["rowFilter.comments_thread_with_user_vote.updatedAt"];
          title?: parameters["rowFilter.comments_thread_with_user_vote.title"];
          content?: parameters["rowFilter.comments_thread_with_user_vote.content"];
          isPublished?: parameters["rowFilter.comments_thread_with_user_vote.isPublished"];
          authorId?: parameters["rowFilter.comments_thread_with_user_vote.authorId"];
          parentId?: parameters["rowFilter.comments_thread_with_user_vote.parentId"];
          live?: parameters["rowFilter.comments_thread_with_user_vote.live"];
          siteId?: parameters["rowFilter.comments_thread_with_user_vote.siteId"];
          isPinned?: parameters["rowFilter.comments_thread_with_user_vote.isPinned"];
          isDeleted?: parameters["rowFilter.comments_thread_with_user_vote.isDeleted"];
          isApproved?: parameters["rowFilter.comments_thread_with_user_vote.isApproved"];
          html?: parameters["rowFilter.comments_thread_with_user_vote.html"];
          isSpam?: parameters["rowFilter.comments_thread_with_user_vote.isSpam"];
          author?: parameters["rowFilter.comments_thread_with_user_vote.author"];
          votes?: parameters["rowFilter.comments_thread_with_user_vote.votes"];
          upvotes?: parameters["rowFilter.comments_thread_with_user_vote.upvotes"];
          downvotes?: parameters["rowFilter.comments_thread_with_user_vote.downvotes"];
          depth?: parameters["rowFilter.comments_thread_with_user_vote.depth"];
          path?: parameters["rowFilter.comments_thread_with_user_vote.path"];
          pathVotesRecent?: parameters["rowFilter.comments_thread_with_user_vote.pathVotesRecent"];
          pathLeastRecent?: parameters["rowFilter.comments_thread_with_user_vote.pathLeastRecent"];
          pathMostRecent?: parameters["rowFilter.comments_thread_with_user_vote.pathMostRecent"];
          userVoteValue?: parameters["rowFilter.comments_thread_with_user_vote.userVoteValue"];
          nestedChildrenCount?: parameters["rowFilter.comments_thread_with_user_vote.nestedChildrenCount"];
          childrenCount?: parameters["rowFilter.comments_thread_with_user_vote.childrenCount"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comments_thread_with_user_vote"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/comments_with_author_votes": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments_with_author_votes.id"];
          slug?: parameters["rowFilter.comments_with_author_votes.slug"];
          createdAt?: parameters["rowFilter.comments_with_author_votes.createdAt"];
          updatedAt?: parameters["rowFilter.comments_with_author_votes.updatedAt"];
          title?: parameters["rowFilter.comments_with_author_votes.title"];
          content?: parameters["rowFilter.comments_with_author_votes.content"];
          isPublished?: parameters["rowFilter.comments_with_author_votes.isPublished"];
          authorId?: parameters["rowFilter.comments_with_author_votes.authorId"];
          parentId?: parameters["rowFilter.comments_with_author_votes.parentId"];
          live?: parameters["rowFilter.comments_with_author_votes.live"];
          siteId?: parameters["rowFilter.comments_with_author_votes.siteId"];
          isPinned?: parameters["rowFilter.comments_with_author_votes.isPinned"];
          isDeleted?: parameters["rowFilter.comments_with_author_votes.isDeleted"];
          isApproved?: parameters["rowFilter.comments_with_author_votes.isApproved"];
          html?: parameters["rowFilter.comments_with_author_votes.html"];
          isSpam?: parameters["rowFilter.comments_with_author_votes.isSpam"];
          author?: parameters["rowFilter.comments_with_author_votes.author"];
          votes?: parameters["rowFilter.comments_with_author_votes.votes"];
          upvotes?: parameters["rowFilter.comments_with_author_votes.upvotes"];
          downvotes?: parameters["rowFilter.comments_with_author_votes.downvotes"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comments_with_author_votes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/documents": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.documents.id"];
          slug?: parameters["rowFilter.documents.slug"];
          body?: parameters["rowFilter.documents.body"];
          parent_id?: parameters["rowFilter.documents.parent_id"];
          title?: parameters["rowFilter.documents.title"];
          owner_id?: parameters["rowFilter.documents.owner_id"];
          inserted_at?: parameters["rowFilter.documents.inserted_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["documents"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** documents */
          documents?: definitions["documents"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.documents.id"];
          slug?: parameters["rowFilter.documents.slug"];
          body?: parameters["rowFilter.documents.body"];
          parent_id?: parameters["rowFilter.documents.parent_id"];
          title?: parameters["rowFilter.documents.title"];
          owner_id?: parameters["rowFilter.documents.owner_id"];
          inserted_at?: parameters["rowFilter.documents.inserted_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.documents.id"];
          slug?: parameters["rowFilter.documents.slug"];
          body?: parameters["rowFilter.documents.body"];
          parent_id?: parameters["rowFilter.documents.parent_id"];
          title?: parameters["rowFilter.documents.title"];
          owner_id?: parameters["rowFilter.documents.owner_id"];
          inserted_at?: parameters["rowFilter.documents.inserted_at"];
        };
        body: {
          /** documents */
          documents?: definitions["documents"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/items": {
    get: {
      parameters: {
        query: {
          item_id?: parameters["rowFilter.items.item_id"];
          deleted?: parameters["rowFilter.items.deleted"];
          type?: parameters["rowFilter.items.type"];
          by?: parameters["rowFilter.items.by"];
          inserted_at?: parameters["rowFilter.items.inserted_at"];
          updated_at?: parameters["rowFilter.items.updated_at"];
          text?: parameters["rowFilter.items.text"];
          parent_id?: parameters["rowFilter.items.parent_id"];
          title?: parameters["rowFilter.items.title"];
          score?: parameters["rowFilter.items.score"];
          url?: parameters["rowFilter.items.url"];
          path?: parameters["rowFilter.items.path"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["items"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** items */
          items?: definitions["items"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          item_id?: parameters["rowFilter.items.item_id"];
          deleted?: parameters["rowFilter.items.deleted"];
          type?: parameters["rowFilter.items.type"];
          by?: parameters["rowFilter.items.by"];
          inserted_at?: parameters["rowFilter.items.inserted_at"];
          updated_at?: parameters["rowFilter.items.updated_at"];
          text?: parameters["rowFilter.items.text"];
          parent_id?: parameters["rowFilter.items.parent_id"];
          title?: parameters["rowFilter.items.title"];
          score?: parameters["rowFilter.items.score"];
          url?: parameters["rowFilter.items.url"];
          path?: parameters["rowFilter.items.path"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          item_id?: parameters["rowFilter.items.item_id"];
          deleted?: parameters["rowFilter.items.deleted"];
          type?: parameters["rowFilter.items.type"];
          by?: parameters["rowFilter.items.by"];
          inserted_at?: parameters["rowFilter.items.inserted_at"];
          updated_at?: parameters["rowFilter.items.updated_at"];
          text?: parameters["rowFilter.items.text"];
          parent_id?: parameters["rowFilter.items.parent_id"];
          title?: parameters["rowFilter.items.title"];
          score?: parameters["rowFilter.items.score"];
          url?: parameters["rowFilter.items.url"];
          path?: parameters["rowFilter.items.path"];
        };
        body: {
          /** items */
          items?: definitions["items"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/pages": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pages.id"];
          ownerId?: parameters["rowFilter.pages.ownerId"];
          name?: parameters["rowFilter.pages.name"];
          subdomain?: parameters["rowFilter.pages.subdomain"];
          mimeType?: parameters["rowFilter.pages.mimeType"];
          googleDriveId?: parameters["rowFilter.pages.googleDriveId"];
          parentId?: parameters["rowFilter.pages.parentId"];
          path?: parameters["rowFilter.pages.path"];
          absolutePath?: parameters["rowFilter.pages.absolutePath"];
          slug?: parameters["rowFilter.pages.slug"];
          created_at?: parameters["rowFilter.pages.created_at"];
          updated_at?: parameters["rowFilter.pages.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["pages"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** pages */
          pages?: definitions["pages"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pages.id"];
          ownerId?: parameters["rowFilter.pages.ownerId"];
          name?: parameters["rowFilter.pages.name"];
          subdomain?: parameters["rowFilter.pages.subdomain"];
          mimeType?: parameters["rowFilter.pages.mimeType"];
          googleDriveId?: parameters["rowFilter.pages.googleDriveId"];
          parentId?: parameters["rowFilter.pages.parentId"];
          path?: parameters["rowFilter.pages.path"];
          absolutePath?: parameters["rowFilter.pages.absolutePath"];
          slug?: parameters["rowFilter.pages.slug"];
          created_at?: parameters["rowFilter.pages.created_at"];
          updated_at?: parameters["rowFilter.pages.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pages.id"];
          ownerId?: parameters["rowFilter.pages.ownerId"];
          name?: parameters["rowFilter.pages.name"];
          subdomain?: parameters["rowFilter.pages.subdomain"];
          mimeType?: parameters["rowFilter.pages.mimeType"];
          googleDriveId?: parameters["rowFilter.pages.googleDriveId"];
          parentId?: parameters["rowFilter.pages.parentId"];
          path?: parameters["rowFilter.pages.path"];
          absolutePath?: parameters["rowFilter.pages.absolutePath"];
          slug?: parameters["rowFilter.pages.slug"];
          created_at?: parameters["rowFilter.pages.created_at"];
          updated_at?: parameters["rowFilter.pages.updated_at"];
        };
        body: {
          /** pages */
          pages?: definitions["pages"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/posts": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts.id"];
          slug?: parameters["rowFilter.posts.slug"];
          createdAt?: parameters["rowFilter.posts.createdAt"];
          updatedAt?: parameters["rowFilter.posts.updatedAt"];
          title?: parameters["rowFilter.posts.title"];
          content?: parameters["rowFilter.posts.content"];
          isPublished?: parameters["rowFilter.posts.isPublished"];
          authorId?: parameters["rowFilter.posts.authorId"];
          parentId?: parameters["rowFilter.posts.parentId"];
          live?: parameters["rowFilter.posts.live"];
          siteId?: parameters["rowFilter.posts.siteId"];
          isPinned?: parameters["rowFilter.posts.isPinned"];
          isDeleted?: parameters["rowFilter.posts.isDeleted"];
          isApproved?: parameters["rowFilter.posts.isApproved"];
          html?: parameters["rowFilter.posts.html"];
          isSpam?: parameters["rowFilter.posts.isSpam"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["posts"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** posts */
          posts?: definitions["posts"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts.id"];
          slug?: parameters["rowFilter.posts.slug"];
          createdAt?: parameters["rowFilter.posts.createdAt"];
          updatedAt?: parameters["rowFilter.posts.updatedAt"];
          title?: parameters["rowFilter.posts.title"];
          content?: parameters["rowFilter.posts.content"];
          isPublished?: parameters["rowFilter.posts.isPublished"];
          authorId?: parameters["rowFilter.posts.authorId"];
          parentId?: parameters["rowFilter.posts.parentId"];
          live?: parameters["rowFilter.posts.live"];
          siteId?: parameters["rowFilter.posts.siteId"];
          isPinned?: parameters["rowFilter.posts.isPinned"];
          isDeleted?: parameters["rowFilter.posts.isDeleted"];
          isApproved?: parameters["rowFilter.posts.isApproved"];
          html?: parameters["rowFilter.posts.html"];
          isSpam?: parameters["rowFilter.posts.isSpam"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts.id"];
          slug?: parameters["rowFilter.posts.slug"];
          createdAt?: parameters["rowFilter.posts.createdAt"];
          updatedAt?: parameters["rowFilter.posts.updatedAt"];
          title?: parameters["rowFilter.posts.title"];
          content?: parameters["rowFilter.posts.content"];
          isPublished?: parameters["rowFilter.posts.isPublished"];
          authorId?: parameters["rowFilter.posts.authorId"];
          parentId?: parameters["rowFilter.posts.parentId"];
          live?: parameters["rowFilter.posts.live"];
          siteId?: parameters["rowFilter.posts.siteId"];
          isPinned?: parameters["rowFilter.posts.isPinned"];
          isDeleted?: parameters["rowFilter.posts.isDeleted"];
          isApproved?: parameters["rowFilter.posts.isApproved"];
          html?: parameters["rowFilter.posts.html"];
          isSpam?: parameters["rowFilter.posts.isSpam"];
        };
        body: {
          /** posts */
          posts?: definitions["posts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          full_name?: parameters["rowFilter.profiles.full_name"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          inserted_at?: parameters["rowFilter.profiles.inserted_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          full_name?: parameters["rowFilter.profiles.full_name"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          inserted_at?: parameters["rowFilter.profiles.inserted_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          full_name?: parameters["rowFilter.profiles.full_name"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          inserted_at?: parameters["rowFilter.profiles.inserted_at"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/sites": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sites.id"];
          siteDomain?: parameters["rowFilter.sites.siteDomain"];
          ownerId?: parameters["rowFilter.sites.ownerId"];
          name?: parameters["rowFilter.sites.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["sites"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** sites */
          sites?: definitions["sites"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sites.id"];
          siteDomain?: parameters["rowFilter.sites.siteDomain"];
          ownerId?: parameters["rowFilter.sites.ownerId"];
          name?: parameters["rowFilter.sites.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sites.id"];
          siteDomain?: parameters["rowFilter.sites.siteDomain"];
          ownerId?: parameters["rowFilter.sites.ownerId"];
          name?: parameters["rowFilter.sites.name"];
        };
        body: {
          /** sites */
          sites?: definitions["sites"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/subdomains": {
    get: {
      parameters: {
        query: {
          subdomain?: parameters["rowFilter.subdomains.subdomain"];
          ownerId?: parameters["rowFilter.subdomains.ownerId"];
          provider_token?: parameters["rowFilter.subdomains.provider_token"];
          refresh_token?: parameters["rowFilter.subdomains.refresh_token"];
          created_at?: parameters["rowFilter.subdomains.created_at"];
          updated_at?: parameters["rowFilter.subdomains.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["subdomains"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** subdomains */
          subdomains?: definitions["subdomains"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          subdomain?: parameters["rowFilter.subdomains.subdomain"];
          ownerId?: parameters["rowFilter.subdomains.ownerId"];
          provider_token?: parameters["rowFilter.subdomains.provider_token"];
          refresh_token?: parameters["rowFilter.subdomains.refresh_token"];
          created_at?: parameters["rowFilter.subdomains.created_at"];
          updated_at?: parameters["rowFilter.subdomains.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          subdomain?: parameters["rowFilter.subdomains.subdomain"];
          ownerId?: parameters["rowFilter.subdomains.ownerId"];
          provider_token?: parameters["rowFilter.subdomains.provider_token"];
          refresh_token?: parameters["rowFilter.subdomains.refresh_token"];
          created_at?: parameters["rowFilter.subdomains.created_at"];
          updated_at?: parameters["rowFilter.subdomains.updated_at"];
        };
        body: {
          /** subdomains */
          subdomains?: definitions["subdomains"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/teams": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.teams.id"];
          name?: parameters["rowFilter.teams.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["teams"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** teams */
          teams?: definitions["teams"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.teams.id"];
          name?: parameters["rowFilter.teams.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.teams.id"];
          name?: parameters["rowFilter.teams.name"];
        };
        body: {
          /** teams */
          teams?: definitions["teams"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/votes": {
    get: {
      parameters: {
        query: {
          postId?: parameters["rowFilter.votes.postId"];
          userId?: parameters["rowFilter.votes.userId"];
          value?: parameters["rowFilter.votes.value"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["votes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** votes */
          votes?: definitions["votes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          postId?: parameters["rowFilter.votes.postId"];
          userId?: parameters["rowFilter.votes.userId"];
          value?: parameters["rowFilter.votes.value"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          postId?: parameters["rowFilter.votes.postId"];
          userId?: parameters["rowFilter.votes.userId"];
          value?: parameters["rowFilter.votes.value"];
        };
        body: {
          /** votes */
          votes?: definitions["votes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/handle_new_user": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/build_post_responses": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: integer */
            max_depth?: number;
            /** Format: bigint */
            parent_id: number;
            /** Format: integer */
            current_depth?: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_item_descendants": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: extensions.ltree */
            parent_path: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  comment_with_author: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /** Format: text */
    slug?: string;
    /** Format: timestamp with time zone */
    createdAt?: string;
    /** Format: timestamp with time zone */
    updatedAt?: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    content?: string;
    /** Format: boolean */
    isPublished?: boolean;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    authorId?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `posts.id`.<fk table='posts' column='id'/>
     */
    parentId?: number;
    /** Format: boolean */
    live?: boolean;
    /** Format: bigint */
    siteId?: number;
    /** Format: boolean */
    isPinned?: boolean;
    /** Format: boolean */
    isDeleted?: boolean;
    /** Format: boolean */
    isApproved?: boolean;
    /** Format: text */
    html?: string;
    /** Format: boolean */
    isSpam?: boolean;
    /** Format: jsonb */
    author?: string;
  };
  comments_linear_view: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /** Format: text */
    slug?: string;
    /** Format: timestamp with time zone */
    createdAt?: string;
    /** Format: timestamp with time zone */
    updatedAt?: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    content?: string;
    /** Format: boolean */
    isPublished?: boolean;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    authorId?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `posts.id`.<fk table='posts' column='id'/>
     */
    parentId?: number;
    /** Format: boolean */
    live?: boolean;
    /** Format: bigint */
    siteId?: number;
    /** Format: boolean */
    isPinned?: boolean;
    /** Format: boolean */
    isDeleted?: boolean;
    /** Format: boolean */
    isApproved?: boolean;
    /** Format: text */
    html?: string;
    /** Format: boolean */
    isSpam?: boolean;
    /** Format: jsonb */
    author?: string;
    /** Format: jsonb */
    parent?: string;
    /** Format: json */
    responses?: string;
  };
  comments_thread: {
    /** Format: bigint */
    id?: number;
    /** Format: text */
    slug?: string;
    /** Format: timestamp with time zone */
    createdAt?: string;
    /** Format: timestamp with time zone */
    updatedAt?: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    content?: string;
    /** Format: boolean */
    isPublished?: boolean;
    /** Format: uuid */
    authorId?: string;
    /** Format: bigint */
    parentId?: number;
    /** Format: boolean */
    live?: boolean;
    /** Format: bigint */
    siteId?: number;
    /** Format: boolean */
    isPinned?: boolean;
    /** Format: boolean */
    isDeleted?: boolean;
    /** Format: boolean */
    isApproved?: boolean;
    /** Format: text */
    html?: string;
    /** Format: boolean */
    isSpam?: boolean;
    /** Format: jsonb */
    author?: string;
    /** Format: bigint */
    votes?: number;
    /** Format: bigint */
    upvotes?: number;
    /** Format: bigint */
    downvotes?: number;
    /** Format: integer */
    depth?: number;
    /** Format: ARRAY */
    path?: unknown[];
    /** Format: ARRAY */
    pathVotesRecent?: unknown[];
    /** Format: ARRAY */
    pathLeastRecent?: unknown[];
    /** Format: ARRAY */
    pathMostRecent?: unknown[];
  };
  comments_thread_with_user_vote: {
    /** Format: bigint */
    id?: number;
    /** Format: text */
    slug?: string;
    /** Format: timestamp with time zone */
    createdAt?: string;
    /** Format: timestamp with time zone */
    updatedAt?: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    content?: string;
    /** Format: boolean */
    isPublished?: boolean;
    /** Format: uuid */
    authorId?: string;
    /** Format: bigint */
    parentId?: number;
    /** Format: boolean */
    live?: boolean;
    /** Format: bigint */
    siteId?: number;
    /** Format: boolean */
    isPinned?: boolean;
    /** Format: boolean */
    isDeleted?: boolean;
    /** Format: boolean */
    isApproved?: boolean;
    /** Format: text */
    html?: string;
    /** Format: boolean */
    isSpam?: boolean;
    /** Format: jsonb */
    author?: string;
    /** Format: bigint */
    votes?: number;
    /** Format: bigint */
    upvotes?: number;
    /** Format: bigint */
    downvotes?: number;
    /** Format: integer */
    depth?: number;
    /** Format: ARRAY */
    path?: unknown[];
    /** Format: ARRAY */
    pathVotesRecent?: unknown[];
    /** Format: ARRAY */
    pathLeastRecent?: unknown[];
    /** Format: ARRAY */
    pathMostRecent?: unknown[];
    /** Format: integer */
    userVoteValue?: number;
    /** Format: bigint */
    nestedChildrenCount?: number;
    /** Format: bigint */
    childrenCount?: number;
  };
  comments_with_author_votes: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /** Format: text */
    slug?: string;
    /** Format: timestamp with time zone */
    createdAt?: string;
    /** Format: timestamp with time zone */
    updatedAt?: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    content?: string;
    /** Format: boolean */
    isPublished?: boolean;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    authorId?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `posts.id`.<fk table='posts' column='id'/>
     */
    parentId?: number;
    /** Format: boolean */
    live?: boolean;
    /** Format: bigint */
    siteId?: number;
    /** Format: boolean */
    isPinned?: boolean;
    /** Format: boolean */
    isDeleted?: boolean;
    /** Format: boolean */
    isApproved?: boolean;
    /** Format: text */
    html?: string;
    /** Format: boolean */
    isSpam?: boolean;
    /** Format: jsonb */
    author?: string;
    /** Format: bigint */
    votes?: number;
    /** Format: bigint */
    upvotes?: number;
    /** Format: bigint */
    downvotes?: number;
  };
  documents: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /** Format: text */
    slug: string;
    /** Format: text */
    body?: string;
    /** Format: uuid */
    parent_id?: string;
    /** Format: text */
    title: string;
    /** Format: uuid */
    owner_id: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    inserted_at: string;
  };
  items: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    item_id: number;
    /** Format: boolean */
    deleted: boolean;
    /**
     * Format: public.item_type
     * @enum {string}
     */
    type: "job" | "story" | "comment" | "poll";
    /**
     * Format: text
     * @description Note:
     * This is a Foreign Key to `profiles.username`.<fk table='profiles' column='username'/>
     */
    by: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    inserted_at: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    updated_at: string;
    /** Format: text */
    text?: string;
    /**
     * Format: integer
     * @description Note:
     * This is a Foreign Key to `items.item_id`.<fk table='items' column='item_id'/>
     */
    parent_id?: number;
    /** Format: text */
    title?: string;
    /** Format: integer */
    score: number;
    /** Format: text */
    url?: string;
    /** Format: extensions.ltree */
    path?: string;
  };
  pages: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    ownerId: string;
    /** Format: text */
    name: string;
    /**
     * Format: text
     * @description Note:
     * This is a Foreign Key to `subdomains.subdomain`.<fk table='subdomains' column='subdomain'/>
     */
    subdomain: string;
    /** Format: text */
    mimeType: string;
    /** Format: text */
    googleDriveId: string;
    /** Format: text */
    parentId: string;
    /** Format: ARRAY */
    path: unknown[];
    /** Format: ARRAY */
    absolutePath: unknown[];
    /** Format: text */
    slug: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    created_at: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    updated_at: string;
  };
  posts: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    slug: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdAt: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updatedAt?: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    content?: string;
    /** Format: boolean */
    isPublished: boolean;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    authorId: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `posts.id`.<fk table='posts' column='id'/>
     */
    parentId?: number;
    /**
     * Format: boolean
     * @default true
     */
    live?: boolean;
    /** Format: bigint */
    siteId: number;
    /** Format: boolean */
    isPinned: boolean;
    /** Format: boolean */
    isDeleted: boolean;
    /** Format: boolean */
    isApproved: boolean;
    /** Format: text */
    html?: string;
    /** Format: boolean */
    isSpam: boolean;
  };
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /** Format: text */
    username?: string;
    /** Format: text */
    full_name?: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: text */
    website?: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    inserted_at: string;
  };
  sites: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    siteDomain: string;
    /** Format: uuid */
    ownerId: string;
    /** Format: text */
    name: string;
  };
  subdomains: {
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    subdomain: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    ownerId: string;
    /** Format: text */
    provider_token: string;
    /** Format: text */
    refresh_token: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    created_at: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    updated_at: string;
  };
  teams: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    name?: string;
  };
  votes: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `posts.id`.<fk table='posts' column='id'/>
     */
    postId: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    userId: string;
    /** Format: integer */
    value: number;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description comment_with_author */
  "body.comment_with_author": definitions["comment_with_author"];
  /** Format: bigint */
  "rowFilter.comment_with_author.id": string;
  /** Format: text */
  "rowFilter.comment_with_author.slug": string;
  /** Format: timestamp with time zone */
  "rowFilter.comment_with_author.createdAt": string;
  /** Format: timestamp with time zone */
  "rowFilter.comment_with_author.updatedAt": string;
  /** Format: text */
  "rowFilter.comment_with_author.title": string;
  /** Format: text */
  "rowFilter.comment_with_author.content": string;
  /** Format: boolean */
  "rowFilter.comment_with_author.isPublished": string;
  /** Format: uuid */
  "rowFilter.comment_with_author.authorId": string;
  /** Format: bigint */
  "rowFilter.comment_with_author.parentId": string;
  /** Format: boolean */
  "rowFilter.comment_with_author.live": string;
  /** Format: bigint */
  "rowFilter.comment_with_author.siteId": string;
  /** Format: boolean */
  "rowFilter.comment_with_author.isPinned": string;
  /** Format: boolean */
  "rowFilter.comment_with_author.isDeleted": string;
  /** Format: boolean */
  "rowFilter.comment_with_author.isApproved": string;
  /** Format: text */
  "rowFilter.comment_with_author.html": string;
  /** Format: boolean */
  "rowFilter.comment_with_author.isSpam": string;
  /** Format: jsonb */
  "rowFilter.comment_with_author.author": string;
  /** @description comments_linear_view */
  "body.comments_linear_view": definitions["comments_linear_view"];
  /** Format: bigint */
  "rowFilter.comments_linear_view.id": string;
  /** Format: text */
  "rowFilter.comments_linear_view.slug": string;
  /** Format: timestamp with time zone */
  "rowFilter.comments_linear_view.createdAt": string;
  /** Format: timestamp with time zone */
  "rowFilter.comments_linear_view.updatedAt": string;
  /** Format: text */
  "rowFilter.comments_linear_view.title": string;
  /** Format: text */
  "rowFilter.comments_linear_view.content": string;
  /** Format: boolean */
  "rowFilter.comments_linear_view.isPublished": string;
  /** Format: uuid */
  "rowFilter.comments_linear_view.authorId": string;
  /** Format: bigint */
  "rowFilter.comments_linear_view.parentId": string;
  /** Format: boolean */
  "rowFilter.comments_linear_view.live": string;
  /** Format: bigint */
  "rowFilter.comments_linear_view.siteId": string;
  /** Format: boolean */
  "rowFilter.comments_linear_view.isPinned": string;
  /** Format: boolean */
  "rowFilter.comments_linear_view.isDeleted": string;
  /** Format: boolean */
  "rowFilter.comments_linear_view.isApproved": string;
  /** Format: text */
  "rowFilter.comments_linear_view.html": string;
  /** Format: boolean */
  "rowFilter.comments_linear_view.isSpam": string;
  /** Format: jsonb */
  "rowFilter.comments_linear_view.author": string;
  /** Format: jsonb */
  "rowFilter.comments_linear_view.parent": string;
  /** Format: json */
  "rowFilter.comments_linear_view.responses": string;
  /** @description comments_thread */
  "body.comments_thread": definitions["comments_thread"];
  /** Format: bigint */
  "rowFilter.comments_thread.id": string;
  /** Format: text */
  "rowFilter.comments_thread.slug": string;
  /** Format: timestamp with time zone */
  "rowFilter.comments_thread.createdAt": string;
  /** Format: timestamp with time zone */
  "rowFilter.comments_thread.updatedAt": string;
  /** Format: text */
  "rowFilter.comments_thread.title": string;
  /** Format: text */
  "rowFilter.comments_thread.content": string;
  /** Format: boolean */
  "rowFilter.comments_thread.isPublished": string;
  /** Format: uuid */
  "rowFilter.comments_thread.authorId": string;
  /** Format: bigint */
  "rowFilter.comments_thread.parentId": string;
  /** Format: boolean */
  "rowFilter.comments_thread.live": string;
  /** Format: bigint */
  "rowFilter.comments_thread.siteId": string;
  /** Format: boolean */
  "rowFilter.comments_thread.isPinned": string;
  /** Format: boolean */
  "rowFilter.comments_thread.isDeleted": string;
  /** Format: boolean */
  "rowFilter.comments_thread.isApproved": string;
  /** Format: text */
  "rowFilter.comments_thread.html": string;
  /** Format: boolean */
  "rowFilter.comments_thread.isSpam": string;
  /** Format: jsonb */
  "rowFilter.comments_thread.author": string;
  /** Format: bigint */
  "rowFilter.comments_thread.votes": string;
  /** Format: bigint */
  "rowFilter.comments_thread.upvotes": string;
  /** Format: bigint */
  "rowFilter.comments_thread.downvotes": string;
  /** Format: integer */
  "rowFilter.comments_thread.depth": string;
  /** Format: ARRAY */
  "rowFilter.comments_thread.path": string;
  /** Format: ARRAY */
  "rowFilter.comments_thread.pathVotesRecent": string;
  /** Format: ARRAY */
  "rowFilter.comments_thread.pathLeastRecent": string;
  /** Format: ARRAY */
  "rowFilter.comments_thread.pathMostRecent": string;
  /** @description comments_thread_with_user_vote */
  "body.comments_thread_with_user_vote": definitions["comments_thread_with_user_vote"];
  /** Format: bigint */
  "rowFilter.comments_thread_with_user_vote.id": string;
  /** Format: text */
  "rowFilter.comments_thread_with_user_vote.slug": string;
  /** Format: timestamp with time zone */
  "rowFilter.comments_thread_with_user_vote.createdAt": string;
  /** Format: timestamp with time zone */
  "rowFilter.comments_thread_with_user_vote.updatedAt": string;
  /** Format: text */
  "rowFilter.comments_thread_with_user_vote.title": string;
  /** Format: text */
  "rowFilter.comments_thread_with_user_vote.content": string;
  /** Format: boolean */
  "rowFilter.comments_thread_with_user_vote.isPublished": string;
  /** Format: uuid */
  "rowFilter.comments_thread_with_user_vote.authorId": string;
  /** Format: bigint */
  "rowFilter.comments_thread_with_user_vote.parentId": string;
  /** Format: boolean */
  "rowFilter.comments_thread_with_user_vote.live": string;
  /** Format: bigint */
  "rowFilter.comments_thread_with_user_vote.siteId": string;
  /** Format: boolean */
  "rowFilter.comments_thread_with_user_vote.isPinned": string;
  /** Format: boolean */
  "rowFilter.comments_thread_with_user_vote.isDeleted": string;
  /** Format: boolean */
  "rowFilter.comments_thread_with_user_vote.isApproved": string;
  /** Format: text */
  "rowFilter.comments_thread_with_user_vote.html": string;
  /** Format: boolean */
  "rowFilter.comments_thread_with_user_vote.isSpam": string;
  /** Format: jsonb */
  "rowFilter.comments_thread_with_user_vote.author": string;
  /** Format: bigint */
  "rowFilter.comments_thread_with_user_vote.votes": string;
  /** Format: bigint */
  "rowFilter.comments_thread_with_user_vote.upvotes": string;
  /** Format: bigint */
  "rowFilter.comments_thread_with_user_vote.downvotes": string;
  /** Format: integer */
  "rowFilter.comments_thread_with_user_vote.depth": string;
  /** Format: ARRAY */
  "rowFilter.comments_thread_with_user_vote.path": string;
  /** Format: ARRAY */
  "rowFilter.comments_thread_with_user_vote.pathVotesRecent": string;
  /** Format: ARRAY */
  "rowFilter.comments_thread_with_user_vote.pathLeastRecent": string;
  /** Format: ARRAY */
  "rowFilter.comments_thread_with_user_vote.pathMostRecent": string;
  /** Format: integer */
  "rowFilter.comments_thread_with_user_vote.userVoteValue": string;
  /** Format: bigint */
  "rowFilter.comments_thread_with_user_vote.nestedChildrenCount": string;
  /** Format: bigint */
  "rowFilter.comments_thread_with_user_vote.childrenCount": string;
  /** @description comments_with_author_votes */
  "body.comments_with_author_votes": definitions["comments_with_author_votes"];
  /** Format: bigint */
  "rowFilter.comments_with_author_votes.id": string;
  /** Format: text */
  "rowFilter.comments_with_author_votes.slug": string;
  /** Format: timestamp with time zone */
  "rowFilter.comments_with_author_votes.createdAt": string;
  /** Format: timestamp with time zone */
  "rowFilter.comments_with_author_votes.updatedAt": string;
  /** Format: text */
  "rowFilter.comments_with_author_votes.title": string;
  /** Format: text */
  "rowFilter.comments_with_author_votes.content": string;
  /** Format: boolean */
  "rowFilter.comments_with_author_votes.isPublished": string;
  /** Format: uuid */
  "rowFilter.comments_with_author_votes.authorId": string;
  /** Format: bigint */
  "rowFilter.comments_with_author_votes.parentId": string;
  /** Format: boolean */
  "rowFilter.comments_with_author_votes.live": string;
  /** Format: bigint */
  "rowFilter.comments_with_author_votes.siteId": string;
  /** Format: boolean */
  "rowFilter.comments_with_author_votes.isPinned": string;
  /** Format: boolean */
  "rowFilter.comments_with_author_votes.isDeleted": string;
  /** Format: boolean */
  "rowFilter.comments_with_author_votes.isApproved": string;
  /** Format: text */
  "rowFilter.comments_with_author_votes.html": string;
  /** Format: boolean */
  "rowFilter.comments_with_author_votes.isSpam": string;
  /** Format: jsonb */
  "rowFilter.comments_with_author_votes.author": string;
  /** Format: bigint */
  "rowFilter.comments_with_author_votes.votes": string;
  /** Format: bigint */
  "rowFilter.comments_with_author_votes.upvotes": string;
  /** Format: bigint */
  "rowFilter.comments_with_author_votes.downvotes": string;
  /** @description documents */
  "body.documents": definitions["documents"];
  /** Format: uuid */
  "rowFilter.documents.id": string;
  /** Format: text */
  "rowFilter.documents.slug": string;
  /** Format: text */
  "rowFilter.documents.body": string;
  /** Format: uuid */
  "rowFilter.documents.parent_id": string;
  /** Format: text */
  "rowFilter.documents.title": string;
  /** Format: uuid */
  "rowFilter.documents.owner_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.documents.inserted_at": string;
  /** @description items */
  "body.items": definitions["items"];
  /** Format: integer */
  "rowFilter.items.item_id": string;
  /** Format: boolean */
  "rowFilter.items.deleted": string;
  /** Format: public.item_type */
  "rowFilter.items.type": string;
  /** Format: text */
  "rowFilter.items.by": string;
  /** Format: timestamp with time zone */
  "rowFilter.items.inserted_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.items.updated_at": string;
  /** Format: text */
  "rowFilter.items.text": string;
  /** Format: integer */
  "rowFilter.items.parent_id": string;
  /** Format: text */
  "rowFilter.items.title": string;
  /** Format: integer */
  "rowFilter.items.score": string;
  /** Format: text */
  "rowFilter.items.url": string;
  /** Format: extensions.ltree */
  "rowFilter.items.path": string;
  /** @description pages */
  "body.pages": definitions["pages"];
  /** Format: bigint */
  "rowFilter.pages.id": string;
  /** Format: uuid */
  "rowFilter.pages.ownerId": string;
  /** Format: text */
  "rowFilter.pages.name": string;
  /** Format: text */
  "rowFilter.pages.subdomain": string;
  /** Format: text */
  "rowFilter.pages.mimeType": string;
  /** Format: text */
  "rowFilter.pages.googleDriveId": string;
  /** Format: text */
  "rowFilter.pages.parentId": string;
  /** Format: ARRAY */
  "rowFilter.pages.path": string;
  /** Format: ARRAY */
  "rowFilter.pages.absolutePath": string;
  /** Format: text */
  "rowFilter.pages.slug": string;
  /** Format: timestamp with time zone */
  "rowFilter.pages.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.pages.updated_at": string;
  /** @description posts */
  "body.posts": definitions["posts"];
  /** Format: bigint */
  "rowFilter.posts.id": string;
  /** Format: text */
  "rowFilter.posts.slug": string;
  /** Format: timestamp with time zone */
  "rowFilter.posts.createdAt": string;
  /** Format: timestamp with time zone */
  "rowFilter.posts.updatedAt": string;
  /** Format: text */
  "rowFilter.posts.title": string;
  /** Format: text */
  "rowFilter.posts.content": string;
  /** Format: boolean */
  "rowFilter.posts.isPublished": string;
  /** Format: uuid */
  "rowFilter.posts.authorId": string;
  /** Format: bigint */
  "rowFilter.posts.parentId": string;
  /** Format: boolean */
  "rowFilter.posts.live": string;
  /** Format: bigint */
  "rowFilter.posts.siteId": string;
  /** Format: boolean */
  "rowFilter.posts.isPinned": string;
  /** Format: boolean */
  "rowFilter.posts.isDeleted": string;
  /** Format: boolean */
  "rowFilter.posts.isApproved": string;
  /** Format: text */
  "rowFilter.posts.html": string;
  /** Format: boolean */
  "rowFilter.posts.isSpam": string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.updated_at": string;
  /** Format: text */
  "rowFilter.profiles.username": string;
  /** Format: text */
  "rowFilter.profiles.full_name": string;
  /** Format: text */
  "rowFilter.profiles.avatar_url": string;
  /** Format: text */
  "rowFilter.profiles.website": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.inserted_at": string;
  /** @description sites */
  "body.sites": definitions["sites"];
  /** Format: bigint */
  "rowFilter.sites.id": string;
  /** Format: text */
  "rowFilter.sites.siteDomain": string;
  /** Format: uuid */
  "rowFilter.sites.ownerId": string;
  /** Format: text */
  "rowFilter.sites.name": string;
  /** @description subdomains */
  "body.subdomains": definitions["subdomains"];
  /** Format: text */
  "rowFilter.subdomains.subdomain": string;
  /** Format: uuid */
  "rowFilter.subdomains.ownerId": string;
  /** Format: text */
  "rowFilter.subdomains.provider_token": string;
  /** Format: text */
  "rowFilter.subdomains.refresh_token": string;
  /** Format: timestamp with time zone */
  "rowFilter.subdomains.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.subdomains.updated_at": string;
  /** @description teams */
  "body.teams": definitions["teams"];
  /** Format: integer */
  "rowFilter.teams.id": string;
  /** Format: text */
  "rowFilter.teams.name": string;
  /** @description votes */
  "body.votes": definitions["votes"];
  /** Format: bigint */
  "rowFilter.votes.postId": string;
  /** Format: uuid */
  "rowFilter.votes.userId": string;
  /** Format: integer */
  "rowFilter.votes.value": string;
}

export interface operations {}

export interface external {}
